{"version":3,"sources":["Components/Pomodoro_components/timer_styles.module.css","Icons/play.svg","Icons/pause.svg","Components/Pomodoro_components/StartButton.js","Components/Pomodoro_components/Timer.js","Icons/restart.svg","Components/Pomodoro_components/Pomodoro.js","Components/Kanban_components/Card.js","Services/tasks.js","Components/Kanban_components/NewCard.js","Components/Kanban_components/Column.js","Components/Kanban_components/KanbanWrapper.js","App.js","index.js"],"names":["module","exports","StartButton","props","setIsActive","isActive","type","src","pauseIcon","onClick","className","styles","icon","startIcon","Timer","minutes","setMinutes","seconds","setSeconds","counter","setCounter","useEffect","pomodoroCycle","setInterval","secondCounter","minuteCounter","Math","floor","console","log","computedSecond","String","length","computedMinute","clearInterval","time","minute","second","Pomodoro","useState","pomodoros","setPomodoros","corte","setCorte","pomodoroContainer","upperBar","timerContainer","buttonsContainer","restartIcon","reset","getCardStyle","isDragging","draggableStyle","columnBorder","userSelect","padding","grid","margin","borderLeft","borderRadius","background","Card","index","id","content","column","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","style","baseUrl","taskService","getAll","axios","get","create","newObject","post","then","response","data","update","task","put","deleteCard","cardToDelete","delete","NewCard","droppableId","useContext","KanbanContext","tasks","setTasks","addCard","setAddCard","newTask","setNewTask","handleClick","event","preventDefault","rows","ceil","placeholder","onChange","target","value","alert","newCardID","taskObject","date","Date","position","tasksCopy","unshift","JSON","stringify","tasksFetched","filter","sort","a","b","tasksList","forEach","updateIndex","toDo","doing","done","Column","columnTasks","title","droppableProps","isDraggingOver","listStyle","maxHeight","overflowY","overflowX","map","newTasks","columnNumber","KanbanWrapper","onDragEnd","result","source","destination","sInd","dInd","items","list","startIndex","endIndex","Array","from","splice","removed","reorder","droppableSource","droppableDestination","sourceClone","destClone","parseInt","move","createContext","App","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8127b223.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pomodoroContainer\":\"timer_styles_pomodoroContainer__1yN4q\",\"upperBar\":\"timer_styles_upperBar__3W-ef\",\"timerContainer\":\"timer_styles_timerContainer__2unnG\",\"time\":\"timer_styles_time__3mBTD\",\"buttons\":\"timer_styles_buttons__XTNvA\",\"pomodoros\":\"timer_styles_pomodoros__3NCkS\",\"buttonsContainer\":\"timer_styles_buttonsContainer__3TlIg\",\"icon\":\"timer_styles_icon__1VCfw\",\"start\":\"timer_styles_start__2nmjw\",\"pause\":\"timer_styles_pause__29myj\",\"reset\":\"timer_styles_reset__2zr-f\"};","export default __webpack_public_path__ + \"static/media/play.d9976373.svg\";","export default __webpack_public_path__ + \"static/media/pause.3ff0d39d.svg\";","import styles from './timer_styles.module.css'\nimport startIcon from '../../Icons/play.svg'\nimport pauseIcon from '../../Icons/pause.svg'\n\nconst StartButton = (props) => {\n  const { setIsActive, isActive } = props\n\n  if (isActive === true) {\n    return (\n      <input type=\"image\" src={pauseIcon} onClick={() => setIsActive(false)} className={styles.icon}></input>\n    )\n  } else if (isActive === false) {\n    return (\n      <input type=\"image\" src={startIcon} onClick={() => setIsActive(true)} className={styles.icon}></input>\n    )\n  }\n}\n\nexport default StartButton\n","import { useEffect } from 'react';\nimport styles from './timer_styles.module.css'\n\n/* \nSimple timer component used following this tutorial: \n\nUses serInterval every second to countdown from initial time set in minutes and seconds states.\nWhen counter reaches zero, adds 1 to pomodoro cycle counter. \nDisplays time counter and buttons.\n\n*/\n\nconst Timer = (props) => {\n  const { minutes, setMinutes, seconds, setSeconds, isActive, setIsActive,\n    counter, setCounter } = props\n  useEffect(() => {\n    let pomodoroCycle\n\n    if (isActive === true && counter > 0) {\n      pomodoroCycle = setInterval(() => {\n        let secondCounter = counter % 60 - 1;\n        let minuteCounter = Math.floor(counter / 60);\n        console.log('secondCounter is: ', secondCounter);\n        console.log('counter is: ', counter);\n\n        /* \n        The following if statement is needed in order to prevent the first \n        second of the Timer to show '-1' within still the same minute and \n        then jump to '58' in the following minute\n        */\n        let computedSecond = 0\n        if (String(secondCounter).length === 1) {\n          computedSecond = `0${secondCounter}`\n        } else if (secondCounter === -1) {\n          computedSecond = 59\n          minuteCounter = Math.floor((counter - 1) / 60)\n        } else {\n          computedSecond = secondCounter\n        }\n\n        const computedMinute = String(minuteCounter).length === 1 ? `0${minuteCounter}` : minuteCounter;\n\n        setSeconds(computedSecond)\n        setMinutes(computedMinute)\n\n        setCounter(counter - 1)\n      }, 1000)\n    } else if (counter === 0) {\n      console.log(`counter is zero, isActive set to false`);\n      setIsActive(false)\n\n    }\n\n\n\n    return () => clearInterval(pomodoroCycle)\n  }, [isActive, counter])\n\n  return (\n\n    <div className={styles.time}>\n      <span className={styles.minute}>{minutes}</span>\n      <span>:</span>\n      <span className={styles.second}>{seconds}</span>\n    </div>\n\n  )\n}\n\nexport default Timer\n","export default __webpack_public_path__ + \"static/media/restart.d69b8396.svg\";","import { useState, useEffect } from 'react'\nimport StartButton from './StartButton'\nimport styles from './timer_styles.module.css'\nimport Timer from './Timer'\nimport restartIcon from '../../Icons/restart.svg'\n\nconst Pomodoro = (props) => {\n  const [minutes, setMinutes] = useState('25')\n  const [seconds, setSeconds] = useState('00')\n  const [isActive, setIsActive] = useState(false)\n  const [counter, setCounter] = useState(1500) //used to count passed time in pomodoro cycle\n  const [pomodoros, setPomodoros] = useState(0) //used to count number of pomodoro cycles\n  const [corte, setCorte] = useState(true) //use to control when on pomodoro and when on break\n\n  useEffect(() => {\n    console.log('Pomodoro component useEffect init');\n    console.log(`pomodoros is: ${pomodoros}, corte is ${corte}`);\n\n    if (counter === 0 && corte === false && pomodoros < 4) {\n      console.log('corte is false. Pomodoro started');\n      setMinutes('25')\n      setSeconds('00')\n      setCounter(1500)\n      setCorte(true)\n      console.log('pomodoros now is: ', pomodoros);\n    }\n\n    if (counter === 0 && corte === true && pomodoros < 3) {\n      console.log('corte is true. Break started');\n      setPomodoros(pomodoros + 1)\n      setMinutes('05')\n      setSeconds('00')\n      setCounter(300)\n      setCorte(false)\n    }\n\n    if (counter === 0 && corte === true && pomodoros === 3) {\n      console.log('4 pomodoros');\n      setPomodoros(pomodoros + 1)\n      setMinutes('15')\n      setSeconds('00')\n      setCounter(900)\n      setCorte(false)\n      console.log('long break started');\n    }\n\n    if (counter === 0 && pomodoros === 4) {\n      console.log('pomodoro cycle completed');\n      setPomodoros(0)\n      setMinutes('25')\n      setSeconds('00')\n      setCounter(1500)\n      setCorte(true)\n    }\n  }, [isActive])\n\n  const stopTimer = () => {\n    setIsActive(false)\n    setCounter(1500)\n    setMinutes('25')\n    setSeconds('00')\n  }\n\n  return (\n    <div className={styles.pomodoroContainer}>\n      <div className={styles.upperBar}>\n        <div className={styles.timerContainer}>\n          <Timer minutes={minutes} setMinutes={setMinutes} seconds={seconds}\n            setSeconds={setSeconds} isActive={isActive}\n            setIsActive={setIsActive} counter={counter} setCounter={setCounter} />\n        </div>\n        <div className={styles.buttonsContainer}>\n          <StartButton setIsActive={setIsActive} isActive={isActive} />\n          <input type=\"image\" src={restartIcon} onClick={stopTimer} className={styles.reset}></input>\n        </div>\n        <span className={styles.pomodoros}># {pomodoros}</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Pomodoro\n","import { Draggable } from 'react-beautiful-dnd';\nimport './kanban_styles.css';\n\nconst grid = 8;\n\n\nconst getCardStyle = (isDragging, draggableStyle, columnBorder) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n  borderLeft: columnBorder,\n  borderRadius: 5,\n\n  // change background colour if dragging\n  background: isDragging ? \"lightgray\" : \"white\",\n\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\n\nconst Card = (props) => {\n  const { index, id, content, column } = props\n\n  //blue for To-Do, green for Doing and red for Done\n  let columnBorder = \"5px solid black\"\n\n  if (column === 0) {\n    columnBorder = \"5px solid blue\"\n  }\n  if (column === 1) {\n    columnBorder = \"5px solid green\"\n  }\n  if (column === 2) {\n    columnBorder = \"5px solid red\"\n  }\n\n  const handleDeleteCard = cardToDeleteId => {\n    const cardToDelete = {\n      id: cardToDeleteId\n    }\n  }\n\n  return (\n    <Draggable key={id} draggableId={id} index={index}>\n      {(provided, snapshot) => (\n        <li key={id} ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}\n          style={getCardStyle(\n            snapshot.isDragging,\n            provided.draggableProps.style,\n            columnBorder\n          )}>\n          <button className={\"deleteCardButton\"}></button>\n          <p>\n            {content}\n          </p>\n        </li>\n      )}\n    </Draggable>\n  )\n}\n\nexport default Card\n","import axios from 'axios'\nconst baseUrl = '/api/tasks'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = task => {\n  const request = axios.put(`${baseUrl}/${task.id}`, task)\n  return request.then(response => response.data)\n}\n\nconst deleteCard = cardToDelete => {\n  const request = axios.delete(baseUrl, cardToDelete);\n  return request.then(response => response.data);\n}\n\nconst taskService = {\n  getAll,\n  create,\n  update,\n  deleteCard\n}\n\n\nexport default taskService\n","import { useState, useContext } from \"react\";\nimport taskService from \"../../Services/tasks.js\";\nimport './kanban_styles.css'\n\nimport { KanbanContext } from '../../App.js'\n\nconst grid = 8;\n\n\nconst getCardStyle = (height) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n  borderRadius: 5,\n  overflowY: 'scroll',\n  overflowX: 'hidden'\n});\n\nconst updateIndex = (tasksList, id) => {\n  console.log(`taskList to update is: ${JSON.stringify(tasksList)}`)\n  let index = 1\n\n  tasksList.forEach(task => {\n    if (task.id !== id) {\n      const newTask = {\n        id: task.id,\n        content: task.content,\n        date: task.date,\n        column: task.column,\n        position: index\n      }\n      taskService\n        .update(newTask)\n        .then(\n          console.log(`task ${newTask.content} updated with position ${newTask.position} `)\n        )\n\n      index += 1\n    }\n  })\n  console.log(`updates taskList: ${JSON.stringify(tasksList)}`)\n}\n\n\nconst NewCard = (props) => {\n  const { droppableId } = props\n  const { tasks, setTasks } = useContext(KanbanContext);\n  const [addCard, setAddCard] = useState(false)\n  const [newTask, setNewTask] = useState(\"\")\n\n  const handleSubmitNewCard = (event) => {\n\n    if (newTask.length === 0) {\n      console.log(\"submitted new card with no content\")\n      alert(\"No content submitted to new card\")\n      return\n    }\n\n    event.preventDefault()\n    const taskObject = {\n      content: newTask,\n      date: new Date(),\n      column: droppableId,\n      position: 0\n    }\n\n    let newCardID\n\n    taskService\n      .create(taskObject)\n      .then(response => {\n        console.log('task saved to local server');\n        setAddCard(false)\n        newCardID = response.id\n        let tasksCopy = tasks;\n        tasksCopy[droppableId].unshift(taskObject)\n        console.log(`taskcopy: ${JSON.stringify(tasksCopy[droppableId])}`)\n\n        taskService\n          .getAll()\n          .then(response => {\n            console.log(`droppableId: ${droppableId}`)\n            let tasksFetched = response.data\n            console.log(`tasksFetched before filter: ${JSON.stringify(tasksFetched)}`)\n            tasksFetched.filter(task => task.column === droppableId);\n            tasksFetched.sort((a, b) => a.position - b.position)\n            console.log(`tasksFetched: ${JSON.stringify(tasksFetched)}`)\n            updateIndex(tasksFetched, newCardID)\n\n            taskService\n              .getAll()\n              .then(response => {\n                console.log(`newCard getAll init`)\n                let toDo = response.data.filter(task => task.column === 0)\n                toDo.sort((a, b) => a.position - b.position)\n\n\n                const doing = response.data.filter(task => task.column === 1)\n                doing.sort((a, b) => a.position - b.position)\n\n                const done = response.data.filter(task => task.column === 2)\n                done.sort((a, b) => a.position - b.position)\n                setTasks(\n                  [\n                    toDo,\n                    doing,\n                    done\n                  ]\n                )\n              }\n              )\n\n          })\n\n\n\n      })\n\n  }\n\n  const handleClick = (event) => {\n    // function used solely to change the state of addCard and thus display or hide the NewCard text filed.\n    event.preventDefault()\n    setAddCard(!addCard)\n  }\n\n  const handleChange = (event) => {\n    setNewTask(event.target.value)\n  }\n\n  if (addCard === false) {\n    return (\n      <div><button onClick={handleClick} className='addCardButton'>+</button></div>\n    )\n  }\n\n  if (addCard === true) {\n    return (\n      <div className=\"newCardWrapper\">\n        <textarea type=\"textarea\" rows={\n          (newTask.length === 0) ? 1 : Math.ceil(newTask.length / 33)}\n          placeholder='New task...' onChange={handleChange}></textarea>\n        <button onClick={handleSubmitNewCard} className=\"submitCardButton\">Add</button> <button onClick={handleClick}>Cancel</button>\n      </div>\n    )\n  }\n}\n\nexport default NewCard\n","import { useContext } from \"react\";\nimport { Droppable } from 'react-beautiful-dnd';\nimport Card from './Card'\nimport NewCard from './NewCard';\nimport styles from './kanban_styles.css'\nimport { KanbanContext } from '../../App.js'\n\nconst getColumnStyle = isDraggingOver => ({\n  background: isDraggingOver ? \"lightblue\" : \"none\",\n  padding: 5,\n  listStyle: 'none',\n  maxHeight: '93%',\n  overflowY: 'auto',\n  overflowX: 'hidden'\n});\n\nconst Column = (props) => {\n  const { droppableId } = props\n  const { tasks, setTasks } = useContext(KanbanContext);\n  const columnTasks = tasks[droppableId]\n\n  let title = ''\n  if (droppableId === '0') {\n    title = 'To-do'\n  }\n  if (droppableId === '1') {\n    title = 'Doing'\n  }\n  if (droppableId === '2') {\n    title = 'Done'\n  }\n\n  return (\n    <div className=\"kanbanColumn\">\n      <p className=\"columnTitle\"> {title}</p>\n      <div>\n        <NewCard droppableId={droppableId} />\n      </div>\n      <Droppable droppableId={droppableId}>\n        {(provided, snapshot) => (\n          <div className=\"listWrapper\" ref={provided.innerRef} {...provided.droppableProps} >\n            <ul className=\"id\" style={getColumnStyle(snapshot.isDraggingOver)}>\n              {columnTasks.map(({ id, content, column }, index) => {\n                return (\n                  <Card index={index} id={id} content={content} key={id} column={column} />\n                );\n              })}\n            </ul>\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </div>\n\n  )\n}\n\nexport default Column\n","import React, { useState, useEffect, useContext } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\n//components\nimport Column from './Column';\n\n//modules\nimport taskService from '../../Services/tasks';\n\n//styles\nimport styles from './kanban_styles.css'\n\n// context\nimport { KanbanContext } from '../../App.js'\n\n//function to move cards between columns\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  let [removed] = sourceClone.splice(droppableSource.index, 1);\n  removed.column = parseInt(droppableDestination.droppableId) //update card's column field\n\n  destClone.splice(droppableDestination.index, 0, removed); //move card to new column\n\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n\n  taskService\n    .update(removed)\n    .then(\n      console.log('edit called')\n    )\n\n  return result;\n};\n\n//function to reorder cards moved inside same column\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n//update indexes in server after card movement between or into columns\nconst updateIndex = (newTasks, columnNumber) => {\n  let index = 1\n\n  newTasks[columnNumber].forEach(task => {\n    if (index < newTasks[columnNumber].length) {\n      const newTask = {\n        id: task.id,\n        content: task.content,\n        date: task.date,\n        column: columnNumber,\n        position: index\n      }\n      taskService\n        .update(newTask)\n        .then(\n          console.log(`task ${newTask.content} updated with position ${newTask.position} `)\n        )\n      index += 1\n    }\n  })\n}\n\n\nconst KanbanWrapper = () => {\n  const { tasks, setTasks } = useContext(KanbanContext);\n\n\n  //function to save list order after movement. Adding movement between lists\n  const handleOnDragEnd = (result) => {\n    const { source, destination } = result;\n\n    if (!destination) return;\n\n    const sInd = +source.droppableId;\n    const dInd = +destination.droppableId;\n\n    if (sInd === dInd) { //card moved inside same column\n      const items = reorder(tasks[sInd], source.index, destination.index);\n      const newTasks = [...tasks];\n      newTasks[sInd] = items;\n      updateIndex(newTasks, sInd)\n      setTasks(newTasks);\n    } else { //card moved to another column\n      const result = move(tasks[sInd], tasks[dInd], source, destination);\n      const newTasks = [...tasks];\n      newTasks[sInd] = result[sInd];\n      newTasks[dInd] = result[dInd];\n\n      updateIndex(newTasks, sInd)\n      updateIndex(newTasks, dInd)\n\n      setTasks(newTasks)\n\n\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <DragDropContext onDragEnd={handleOnDragEnd}>\n        <Column droppableId=\"0\" />\n        <Column droppableId=\"1\" />\n        <Column droppableId=\"2\" />\n      </DragDropContext>\n    </div>\n  )\n}\n\nexport default KanbanWrapper\n","import React, { useState, useEffect, useReducer, createContext } from \"react\";\n\n//components\nimport Pomodoro from './Components/Pomodoro_components/Pomodoro'\nimport KanbanWrapper from './Components/Kanban_components/KanbanWrapper'\n\n//styles\nimport './App.css'\n\nimport taskService from './Services/tasks.js';\n\n\n// manage kanban context\nexport const KanbanContext = createContext();\n\n\nconst App = () => {\n  const [tasks, setTasks] = useState([[], [], []])\n\n  useEffect(() => {\n    taskService\n      .getAll()\n      .then(response => {\n        console.log(`response is ${JSON.stringify(response.data)}`)\n        const toDo = response.data.filter(task => task.column === 0)\n        toDo.sort((a, b) => a.position - b.position)\n\n        const doing = response.data.filter(task => task.column === 1)\n        doing.sort((a, b) => a.position - b.position)\n\n        const done = response.data.filter(task => task.column === 2)\n        done.sort((a, b) => a.position - b.position)\n        setTasks(\n          [\n            toDo,\n            doing,\n            done\n          ]\n        )\n      })\n  }, [])\n\n  console.log(`app.js tasks set to: ${JSON.stringify(tasks)}`)\n\n\n  return (\n    <div className=\"body\">\n      <div>\n        <Pomodoro />\n      </div>\n      <KanbanContext.Provider value={{ tasks, setTasks }}>\n        <KanbanWrapper />\n      </KanbanContext.Provider>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}