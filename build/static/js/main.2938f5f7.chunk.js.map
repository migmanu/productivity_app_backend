{"version":3,"sources":["Components/timer_styles.module.css","Components/Tasks.js","Components/StartButton.js","Components/Timer.js","Services/tasks.js","App.js","index.js"],"names":["module","exports","Tasks","props","tasks","map","task","content","date","id","StartButton","setIsActive","isActive","console","log","onClick","className","styles","pause","start","Timer","minutes","setMinutes","seconds","setSeconds","counter","setCounter","useEffect","intervalId","setInterval","secondCounter","minuteCounter","Math","floor","computedSecond","String","length","computedMinute","clearInterval","container","time","minute","second","buttons","reset","baseUrl","taskService","getAll","axios","get","create","newObject","post","App","useState","setTasks","newTask","setNewTask","then","response","data","onSubmit","event","preventDefault","taskObject","Date","priority","random","concat","htmlFor","type","value","onChange","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2938f5f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"timer_styles_container__2b2Jh\",\"time\":\"timer_styles_time__36AI6\",\"buttons\":\"timer_styles_buttons__3IOtV\",\"start\":\"timer_styles_start__1uI5G\",\"pause\":\"timer_styles_pause__2oU1H\",\"reset\":\"timer_styles_reset__3D8IE\"};","/* \nCurrently simple component to display tasks\n */\nconst Tasks = (props) => {\n    return (\n        <div>\n            <ul>\n                {props.tasks.map(task => <li key={task.id}>{task.content} | Date: {task.date}</li>)}\n            </ul>\n        </div>\n    )\n}\n\nexport default Tasks","import styles from './timer_styles.module.css'\n\nconst StartButton = (props) => {\n    const { setIsActive, isActive } = props\n    console.log('Button module init. isActive:', isActive);\n\n    if (isActive === true) {\n        console.log('isActive is true');\n        return (\n            <button onClick={() => setIsActive(false)} className={styles.pause}>Pause</button>\n        )\n    } else {\n        console.log('isActive is false');\n        return (\n            <button onClick={() => setIsActive(true)} className={styles.start}>Start</button>\n        )\n    }\n}\n\nexport default StartButton","import react, { useEffect } from 'react';\n\nimport StartButton from './StartButton'\nimport styles from './timer_styles.module.css'\n\n/* \nSimple timer component used following this tutorial: \nhttps://dev.to/emmaadesile/build-a-timer-using-react-hooks-3he2\n\nTo-do: look into comment suggesting optimization \n*/\n\nconst Timer = (props) => {\n    const { minutes, setMinutes, seconds, setSeconds, isActive, setIsActive, counter, setCounter } = props\n    console.log(isActive);\n    useEffect(() => {\n        let intervalId;\n\n        if (isActive) {\n            intervalId = setInterval(() => {\n                const secondCounter = counter % 60;\n                const minuteCounter = Math.floor(counter / 60);\n\n                const computedSecond = String(secondCounter).length === 1 ? `0${secondCounter}` : secondCounter;\n                const computedMinute = String(minuteCounter).length === 1 ? `0${minuteCounter}` : minuteCounter;\n\n                setSeconds(computedSecond)\n                setMinutes(computedMinute)\n\n                setCounter(counter => counter + 1)\n            }, 1000)\n        }\n\n        return () => clearInterval(intervalId)\n    }, [isActive, counter])\n\n    const stopTimer = () => {\n        setIsActive(false)\n        setCounter(0)\n        setSeconds('00')\n        setMinutes('00')\n    }\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.time}>\n                <span className={styles.minute}>{minutes}</span>\n                <span>:</span>\n                <span className={styles.second}>{seconds}</span>\n            </div>\n            <div className={styles.buttons}>\n                <StartButton setIsActive={setIsActive} isActive={isActive} />\n                <button onClick={stopTimer} className={styles.reset}>Reset</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Timer","import axios from 'axios'\nconst baseUrl = '/api/tasks'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst taskService = {\n    getAll,\n    create\n}\n\n\nexport default taskService ","import React, { useState, useEffect } from \"react\";\n\n//components\nimport Tasks from './Components/Tasks';\nimport Timer from \"./Components/Timer\";\n\n//modules\nimport taskService from \"./Services/tasks\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([])\n  const [newTask, setNewTask] = useState(\"\")\n\n  //timer states\n  const [minutes, setMinutes] = useState('00')\n  const [seconds, setSeconds] = useState('00')\n  const [isActive, setIsActive] = useState(false)\n  const [counter, setCounter] = useState(0)\n\n  useEffect(() => {\n    console.log('useEffect init');\n    taskService\n      .getAll()\n      .then(response => {\n        console.log('promised fulfilled. Tasks:', response.data);\n        setTasks(response.data)\n      })\n  }, [])\n\n  const addTask = (event) => {\n    event.preventDefault()\n    console.log('addTask init');\n    const taskObject = {\n      content: newTask,\n      date: new Date(),\n      priority: Math.random() < 0.5,\n    }\n\n    taskService\n      .create(taskObject)\n      .then(response => {\n        console.log('task saved to local server');\n        setTasks(tasks.concat(response.data))\n        setNewTask('')\n      })\n  }\n\n  const handleForm = (event) => {\n    setNewTask(event.target.value)\n  }\n\n  return (\n    <div>\n      <h1>My first productivity App</h1>\n      <div>\n        <form onSubmit={addTask}>\n          <label htmlFor=\"input_task\">Input task</label>{' '}\n          <input type=\"text\" id=\"input_task\" value={newTask} onChange={handleForm}></input>{' '}\n          <button type=\"submit\">Submit task</button>\n        </form>\n        <h2>Current tasks</h2>\n        <Tasks tasks={tasks} />\n      </div>\n      <br></br>\n      <div>\n        <Timer minutes={minutes} setMinutes={setMinutes} seconds={seconds} setSeconds={setSeconds}\n        isActive={isActive} setIsActive={setIsActive} counter={counter} setCounter={setCounter} />\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}