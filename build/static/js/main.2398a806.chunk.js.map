{"version":3,"sources":["timer_styles.module.css","Components/Pomodoro_components/timer_styles.module.css","Components/Pomodoro_components/Timer.js","Components/Pomodoro_components/StartButton.js","Components/Pomodoro_components/Pomodoro.js","Components/Kanban_components/Card.js","Components/Kanban_components/Column.js","Services/tasks.js","Components/Kanban_components/KanbanContext.js","App.js","index.js"],"names":["module","exports","Timer","props","minutes","setMinutes","seconds","setSeconds","isActive","setIsActive","counter","setCounter","useEffect","pomodoroCycle","setInterval","secondCounter","minuteCounter","Math","floor","computedSecond","String","length","computedMinute","console","log","clearInterval","className","styles","time","minute","second","StartButton","onClick","pause","start","Pomodoro","pomodoros","setPomodoros","corte","setCorte","buttons","reset","Card","index","id","task","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","style","isDragging","draggableStyle","userSelect","padding","grid","margin","background","Column","droppableId","tasks","droppableProps","isDraggingOver","width","listStyle","map","placeholder","baseUrl","taskService","getAll","axios","get","create","newObject","post","update","put","then","response","data","KanbanContext","useState","setTasks","filter","column","display","onDragEnd","result","source","destination","sInd","dInd","items","list","startIndex","endIndex","Array","from","splice","removed","reorder","newTasks","droppableSource","droppableDestination","sourceClone","destClone","move","App","newTask","setNewTask","onSubmit","event","preventDefault","taskObject","content","date","Date","priority","random","concat","htmlFor","type","value","onChange","target","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2398a806.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"timer_styles_container__2j-Zh\",\"time\":\"timer_styles_time__34SvS\",\"buttons\":\"timer_styles_buttons__3FnfY\",\"start\":\"timer_styles_start__1NvfS\",\"pause\":\"timer_styles_pause__2H70a\",\"reset\":\"timer_styles_reset__1NFtk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"timer_styles_container__24tyB\",\"time\":\"timer_styles_time__3mBTD\",\"pomodoros\":\"timer_styles_pomodoros__3NCkS\",\"buttons\":\"timer_styles_buttons__XTNvA\",\"start\":\"timer_styles_start__2nmjw\",\"pause\":\"timer_styles_pause__29myj\",\"reset\":\"timer_styles_reset__2zr-f\"};","import { useEffect } from 'react';\nimport styles from './timer_styles.module.css'\n\n/* \nSimple timer component used following this tutorial: \nhttps://dev.to/emmaadesile/build-a-timer-using-react-hooks-3he2\n\nTo-do: look into comment suggesting optimization \n\nUses serInterval every second to countdown from initial time set in minutes and seconds states.\nWhen counter reaches zero, adds 1 to pomodoro cycle counter. \nDisplays time counter and buttons.\n\n*/\n\nconst Timer = (props) => {\n    const { minutes, setMinutes, seconds, setSeconds, isActive, setIsActive, \n        counter, setCounter } = props\n    useEffect(() => {\n        let pomodoroCycle\n\n        if (isActive === true && counter > 0) {\n            pomodoroCycle = setInterval(() => {\n                const secondCounter = counter % 60 - 1;\n                const minuteCounter = Math.floor(counter / 60);\n\n                const computedSecond = String(secondCounter).length === 1 ? `0${secondCounter}` : secondCounter;\n                const computedMinute = String(minuteCounter).length === 1 ? `0${minuteCounter}` : minuteCounter;\n\n                setSeconds(computedSecond)\n                setMinutes(computedMinute) \n\n                setCounter(counter - 1)\n            }, 1000)\n        } else if (counter === 0) {\n            console.log(`counter is zero, isActive set to false`);\n            setIsActive(false)\n            \n        }\n        \n        \n\n        return () => clearInterval(pomodoroCycle)\n    }, [isActive, counter])\n\n    return (\n        \n        <div className={styles.time}>\n            <span className={styles.minute}>{minutes}</span>\n            <span>:</span>\n            <span className={styles.second}>{seconds}</span>\n        </div>\n        \n    )\n}\n\nexport default Timer","import styles from './timer_styles.module.css'\n\nconst StartButton = (props) => {\n    const { setIsActive, isActive } = props\n\n    if (isActive === true) {\n        return (\n            <button onClick={() => setIsActive(false)} className={styles.pause}>Pause</button>\n        )\n    } else if (isActive === false) {\n        return (\n            <button onClick={() => setIsActive(true)} className={styles.start}>Start</button>\n        )\n    }\n}\n\nexport default StartButton","import { useEffect } from 'react'\nimport StartButton from './StartButton'\nimport styles from './timer_styles.module.css'\n\nconst Pomodoro = (props) => {\n    const { counter, setCounter, setMinutes, setSeconds, \n        isActive, setIsActive, pomodoros, setPomodoros, corte, setCorte } = props\n\n    \n\n    useEffect(() => {\n        console.log('Pomodoro component useEffect init');\n        console.log(`pomodoros is: ${pomodoros}, corte is ${corte}`);\n\n        if (counter === 0 && corte === false && pomodoros < 4) {\n            console.log('corte is false. Pomodoro started');\n            setMinutes('25')\n            setSeconds('00')\n            setCounter(2)\n            setCorte(true)\n            console.log('pomodoros now is: ', pomodoros);\n        }\n\n        if (counter === 0 && corte === true && pomodoros < 3) {\n            console.log('corte is true. Break started');\n            setPomodoros(pomodoros + 1)\n            setMinutes('05')\n            setSeconds('00')\n            setCounter(2)\n            setCorte(false)\n        }\n\n        if (counter === 0 && corte === true && pomodoros === 3) {\n            console.log('4 pomodoros');\n            setPomodoros(pomodoros + 1)\n            setMinutes('15')\n            setSeconds('00')\n            setCounter(4)\n            setCorte(false)\n            console.log('long break started');\n        }\n\n        if (counter === 0 && pomodoros === 4) {\n            console.log('pomodoro cycle completed');\n            setPomodoros(0)\n            setMinutes('25')\n            setSeconds('00')\n            setCounter(2)\n            setCorte(true)\n        }\n    }, [isActive])\n\n    const stopTimer = () => {\n        setIsActive(false)\n        setCounter(2)\n        setMinutes('25')\n        setSeconds('00')\n    }\n\n    return (\n        <div>\n            <div className={styles.buttons}>\n                <StartButton setIsActive={setIsActive} isActive={isActive} />\n                <button onClick={stopTimer} className={styles.reset}>Restart pomodoro</button>\n            </div>\n            <span className={styles.pomodoros}>Pomodoros: {pomodoros}</span>\n        </div>\n    )\n}\n\nexport default Pomodoro","import { Draggable } from 'react-beautiful-dnd';\n\nconst grid = 8;\n\nconst getCardStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: \"none\",\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n  \n    // change background colour if dragging\n    background: isDragging ? \"lightgreen\" : \"grey\",\n  \n    // styles we need to apply on draggables\n    ...draggableStyle\n  });\n\nconst Card = (props) => {\n    console.log('Card component init');\n    const { index, id, task } = props\n\n    return(\n        <Draggable key={id} draggableId={id} index={index}>\n            {(provided, snapshot) => (\n                <li key={id} ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} \n                style={getCardStyle(\n                    snapshot.isDragging,\n                    provided.draggableProps.style\n                  )}>\n                    <p>\n                        { task }\n                    </p>\n                </li>\n            )}\n        </Draggable>\n    )\n}\n\nexport default Card","import { Droppable } from 'react-beautiful-dnd';\nimport Card from './Card'\n\nconst grid = 8;\n\nconst getColumnStyle = isDraggingOver => ({\n    background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n    padding: grid,\n    width: 250,\n    listStyle: 'none'\n  });\n\nconst Column = (props) => {\n    console.log('Column component init');\n    const { droppableId, tasks } = props\n\n    return (\n        <Droppable droppableId={droppableId}>\n            {(provided, snapshot) => (\n                    <ul className=\"id\" ref={provided.innerRef} {...provided.droppableProps} style={getColumnStyle(snapshot.isDraggingOver)}>\n                    {tasks.map(({id, task}, index) => {\n                        console.log('Card component called by Column');\n                        return (\n                            <Card index={index} id={id} task={task} key={id} />\n                        );\n                    })}\n                    {provided.placeholder}\n                </ul>\n                )}\n        </Droppable>\n    )\n}\n\nexport default Column","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/tasks'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst update = (task) => {\n    const request = axios.put(`${baseUrl}/${task.id}`, task)\n    return request.then(response => response.data)\n}\n\nconst taskService = {\n    getAll,\n    create,\n    update\n}\n\n\nexport default taskService ","import React, { useState, useEffect } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\n//components\nimport Column from './Column';\n\n//modules\nimport taskService from '../../Services/tasks';\n\n\n//function to move cards between columns\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    console.log('move function init');\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    taskService\n        .update(removed)\n        .then(\n            console.log('edit called')\n        )\n\n    return result; \n};\n\n//function to reorder cards moved inside same column\nconst reorder = (list, startIndex, endIndex) => {\n    console.log('reorder function init');\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n\nconst KanbanContext = () => {\n\n    const [tasks, setTasks] = useState([[], []])\n\n    useEffect(() => {\n        taskService\n          .getAll()\n          .then(response => {\n            setTasks(\n                [\n                    response.data.filter(task => task.column === 0),\n                    response.data.filter(task => task.column === 1)\n                ]\n            )\n          })\n      }, [])\n\n\n    //function to save list order after movement. Adding movement between lists\n    const handleOnDragEnd = (result) => {\n        console.log('handleOnDragEnd init. Result is:', result);\n        const { source, destination } = result;\n\n        if (!destination) return;\n\n        const sInd = +source.droppableId;\n        const dInd = +destination.droppableId;\n\n        console.log('sInd is:', sInd, 'dInd is: ', dInd);\n\n        if (sInd === dInd) { //card moved inside same column\n            const items = reorder(tasks[sInd], source.index, destination.index);\n            const newTasks = [...tasks];\n            newTasks[sInd] = items;\n            setTasks(newTasks);\n          } else { //card moved to another column\n            console.log('tasks is: ', tasks);\n            console.log('source droppableId is: ', sInd);\n            console.log('tasks + sInd is: ', tasks[sInd]);\n            \n            const result = move(tasks[sInd], tasks[dInd], source, destination);\n            console.log('result is: ', result[destination.index]);\n            const newTasks = [...tasks];\n            newTasks[sInd] = result[sInd];\n            newTasks[dInd] = result[dInd];\n\n            setTasks(newTasks)\n          }\n    }\n\n    return (\n        <div style={{ display: \"flex\" }}>\n            <DragDropContext onDragEnd={handleOnDragEnd}>\n                <Column droppableId=\"0\" tasks={tasks[0]} />\n                <Column droppableId=\"1\" tasks={tasks[1]} />\n            </DragDropContext>\n        </div>\n    )\n}\n\nexport default KanbanContext","import React, { useState, useEffect } from \"react\";\n\n//components\nimport Timer from './Components/Pomodoro_components/Timer';\nimport Pomodoro from './Components/Pomodoro_components/Pomodoro'\nimport KanbanContext from './Components/Kanban_components/KanbanContext'\n\n//modules\nimport taskService from \"./Services/tasks\";\n\n//styles\nimport styles from './timer_styles.module.css'\n\nconst App = () => {\n  const [tasks, setTasks] = useState([])\n  const [newTask, setNewTask] = useState(\"\")\n\n  //Pomodoro timer states\n  const [minutes, setMinutes] = useState('25')\n  const [seconds, setSeconds] = useState('00')\n  const [isActive, setIsActive] = useState(false)\n  const [counter, setCounter] = useState(2) //used to count passed time in pomodoro cycle\n  const [pomodoros, setPomodoros] = useState(0) //used to count number of pomodoro cycles\n  const [corte, setCorte] = useState(true) //use to control when on pomodoro and when on break\n\n  useEffect(() => {\n    taskService\n      .getAll()\n      .then(response => {\n        setTasks(response.data)\n      })\n  }, [])\n\n  const addTask = (event) => {\n    event.preventDefault()\n    console.log('addTask init');\n    const taskObject = {\n      content: newTask,\n      date: new Date(),\n      priority: Math.random() < 0.5,\n    }\n\n    taskService\n      .create(taskObject)\n      .then(response => {\n        console.log('task saved to local server');\n        setTasks(tasks.concat(response.data))\n        setNewTask('')\n      })\n  }\n\n  const handleForm = (event) => {\n    setNewTask(event.target.value)\n  }\n\n  return (\n    <div>\n      <h1>My first productivity App</h1>\n      <div>\n        <form onSubmit={addTask}>\n          <label htmlFor=\"input_task\">Input task</label>{' '}\n          <input type=\"text\" id=\"input_task\" value={newTask} onChange={handleForm}></input>{' '}\n          <button type=\"submit\">Submit task</button>\n        </form>\n        <KanbanContext />\n      </div>\n      <br></br>\n      <div className={styles.container}>\n        <Timer minutes={minutes} setMinutes={setMinutes} seconds={seconds} setSeconds={setSeconds}\n        isActive={isActive} setIsActive={setIsActive} counter={counter} setCounter={setCounter} />\n        <Pomodoro counter={counter} setCounter={setCounter} setMinutes={setMinutes} \n        setSeconds={setSeconds} isActive={isActive} setIsActive={setIsActive} \n        pomodoros={pomodoros} setPomodoros={setPomodoros} corte={corte} setCorte={setCorte} />\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}