{"version":3,"sources":["Components/Pomodoro_components/timer_styles.module.css","Components/Pomodoro_components/StartButton.js","Components/Pomodoro_components/Timer.js","Components/Pomodoro_components/Pomodoro.js","Components/Kanban_components/Card.js","Components/Kanban_components/Column.js","Services/tasks.js","Components/Kanban_components/KanbanContext.js","App.js","index.js"],"names":["module","exports","StartButton","props","setIsActive","isActive","onClick","className","styles","pause","start","Timer","minutes","setMinutes","seconds","setSeconds","counter","setCounter","useEffect","pomodoroCycle","setInterval","secondCounter","minuteCounter","Math","floor","console","log","computedSecond","String","length","computedMinute","clearInterval","time","minute","second","Pomodoro","useState","pomodoros","setPomodoros","corte","setCorte","upperBar","buttons","reset","getCardStyle","isDragging","draggableStyle","columnBorder","userSelect","padding","grid","margin","borderLeft","borderRadius","maxWidth","background","Card","index","id","content","column","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","style","Column","droppableId","tasks","title","titleStyle","droppableProps","isDraggingOver","marginLeft","marginRight","width","listStyle","height","maxHeight","overflowY","overflowX","map","placeholder","baseUrl","taskService","getAll","axios","get","create","newObject","post","update","task","request","put","then","response","data","KanbanContext","setTasks","filter","onDragEnd","result","source","destination","sInd","dInd","items","list","startIndex","endIndex","Array","from","splice","removed","reorder","newTasks","droppableSource","droppableDestination","sourceClone","destClone","parseInt","move","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3953cb8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"upperBar\":\"timer_styles_upperBar__3W-ef\",\"time\":\"timer_styles_time__3mBTD\",\"buttons\":\"timer_styles_buttons__XTNvA\",\"pomodoros\":\"timer_styles_pomodoros__3NCkS\",\"start\":\"timer_styles_start__2nmjw\",\"pause\":\"timer_styles_pause__29myj\",\"reset\":\"timer_styles_reset__2zr-f\"};","import styles from './timer_styles.module.css'\n\nconst StartButton = (props) => {\n    const { setIsActive, isActive } = props\n\n    if (isActive === true) {\n        return (\n            <button onClick={() => setIsActive(false)} className={styles.pause}>Pause</button>\n        )\n    } else if (isActive === false) {\n        return (\n            <button onClick={() => setIsActive(true)} className={styles.start}>Start</button>\n        )\n    }\n}\n\nexport default StartButton","import { useEffect } from 'react';\nimport styles from './timer_styles.module.css'\n\n/* \nSimple timer component used following this tutorial: \nhttps://dev.to/emmaadesile/build-a-timer-using-react-hooks-3he2\n\nUses serInterval every second to countdown from initial time set in minutes and seconds states.\nWhen counter reaches zero, adds 1 to pomodoro cycle counter. \nDisplays time counter and buttons.\n\n*/\n\nconst Timer = (props) => {\n    const { minutes, setMinutes, seconds, setSeconds, isActive, setIsActive, \n        counter, setCounter } = props\n    useEffect(() => {\n        let pomodoroCycle\n\n        if (isActive === true && counter > 0) {\n            pomodoroCycle = setInterval(() => {\n                let secondCounter = counter % 60 - 1;\n                let minuteCounter = Math.floor(counter / 60);\n                console.log('secondCounter is: ', secondCounter);\n                console.log('counter is: ', counter);\n\n                /* \n                The following if statement is needed in order to prevent the first \n                second of the Timer to show '-1' within still the same minute and \n                then jump to '58' in the following minute\n                */\n                let computedSecond = 0\n                if (String(secondCounter).length === 1) {\n                    computedSecond = `0${secondCounter}`\n                } else if (secondCounter === -1) {\n                    computedSecond = 59\n                    minuteCounter = Math.floor((counter - 1) / 60)\n                } else {\n                    computedSecond = secondCounter\n                }\n\n                const computedMinute = String(minuteCounter).length === 1 ? `0${minuteCounter}` : minuteCounter;\n\n                setSeconds(computedSecond)\n                setMinutes(computedMinute) \n\n                setCounter(counter - 1)\n            }, 1000)\n        } else if (counter === 0) {\n            console.log(`counter is zero, isActive set to false`);\n            setIsActive(false)\n            \n        }\n        \n        \n\n        return () => clearInterval(pomodoroCycle)\n    }, [isActive, counter])\n\n    return (\n        \n        <div className={styles.time}>\n            <span className={styles.minute}>{minutes}</span>\n            <span>:</span>\n            <span className={styles.second}>{seconds}</span>\n        </div>\n        \n    )\n}\n\nexport default Timer","import { useState, useEffect } from 'react'\nimport StartButton from './StartButton'\nimport styles from './timer_styles.module.css'\nimport Timer from './Timer'\n\nconst Pomodoro = (props) => {\n    const [minutes, setMinutes] = useState('25')\n    const [seconds, setSeconds] = useState('00')\n    const [isActive, setIsActive] = useState(false)\n    const [counter, setCounter] = useState(1500) //used to count passed time in pomodoro cycle\n    const [pomodoros, setPomodoros] = useState(0) //used to count number of pomodoro cycles\n    const [corte, setCorte] = useState(true) //use to control when on pomodoro and when on break\n\n    useEffect(() => {\n        console.log('Pomodoro component useEffect init');\n        console.log(`pomodoros is: ${pomodoros}, corte is ${corte}`);\n\n        if (counter === 0 && corte === false && pomodoros < 4) {\n            console.log('corte is false. Pomodoro started');\n            setMinutes('25')\n            setSeconds('00')\n            setCounter(1500)\n            setCorte(true)\n            console.log('pomodoros now is: ', pomodoros);\n        }\n\n        if (counter === 0 && corte === true && pomodoros < 3) {\n            console.log('corte is true. Break started');\n            setPomodoros(pomodoros + 1)\n            setMinutes('05')\n            setSeconds('00')\n            setCounter(300)\n            setCorte(false)\n        }\n\n        if (counter === 0 && corte === true && pomodoros === 3) {\n            console.log('4 pomodoros');\n            setPomodoros(pomodoros + 1)\n            setMinutes('15')\n            setSeconds('00')\n            setCounter(900)\n            setCorte(false)\n            console.log('long break started');\n        }\n\n        if (counter === 0 && pomodoros === 4) {\n            console.log('pomodoro cycle completed');\n            setPomodoros(0)\n            setMinutes('25')\n            setSeconds('00')\n            setCounter(1500)\n            setCorte(true)\n        }\n    }, [isActive])\n\n    const stopTimer = () => {\n        setIsActive(false)\n        setCounter(1500)\n        setMinutes('25')\n        setSeconds('00')\n    }\n\n    return (\n        <div className={styles.upperBar}>\n            <div>\n                <Timer minutes={minutes} setMinutes={setMinutes} seconds={seconds} \n                setSeconds={setSeconds} isActive={isActive} \n                setIsActive={setIsActive} counter={counter} setCounter={setCounter} />\n            </div>\n            <div className={styles.buttons}>\n                <StartButton setIsActive={setIsActive} isActive={isActive} />\n                <button onClick={stopTimer} className={styles.reset}>Restart</button>\n            </div>\n            <span className={styles.pomodoros}>Pomodoros {pomodoros}</span>\n        </div>\n    )\n}\n\nexport default Pomodoro","import { Draggable } from 'react-beautiful-dnd';\n\nconst grid = 8;\n\n\nconst getCardStyle = (isDragging, draggableStyle, columnBorder) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: \"none\",\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n    borderLeft: columnBorder,\n    borderRadius: 5,\n    maxWidth: 300,\n  \n    // change background colour if dragging\n    background: isDragging ? \"lightgray\" : \"white\",\n  \n    // styles we need to apply on draggables\n    ...draggableStyle\n  });\n\nconst Card = (props) => {\n    const { index, id, content, column } = props\n\n    let columnBorder = \"5px solid black\"\n\n    if (column === 0) {\n        columnBorder = \"5px solid pink\"\n    }\n    if (column === 1) {\n        columnBorder = \"5px solid blue\"\n    }\n    if (column === 3) {\n        columnBorder = \"5px solid green\"\n    }\n\n    return(\n        <Draggable key={id} draggableId={id} index={index}>\n            {(provided, snapshot) => (\n                <li key={id} ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} \n                style={getCardStyle(\n                    snapshot.isDragging,\n                    provided.draggableProps.style,\n                    columnBorder\n                  )}>\n                    <p>\n                        { content }\n                    </p>\n                </li>\n            )}\n        </Draggable>\n    )\n}\n\nexport default Card","import { Droppable } from 'react-beautiful-dnd';\nimport Card from './Card'\n\n\nconst getColumnStyle = isDraggingOver => ({\n    background: isDraggingOver ? \"lightblue\" : \"rgb(240, 235, 235)\",\n    padding: 5,\n    marginLeft: 70,\n    marginRight: 10,\n    width: 300,\n    listStyle: 'none',\n    height: 500,\n    maxHeight: 500,\n    overflowY: 'auto',\n    overflowX: 'hidden'\n  });\n\nconst Column = (props) => {\n    const { droppableId, tasks } = props\n\n    let title = ''\n    let titleStyle = ''\n    if (droppableId === '0') {\n        title = 'To-do'\n        titleStyle = 'toDo'\n    }\n    if (droppableId === '1') {\n        title = 'Doing'\n        titleStyle = \"doing\"\n    }\n    if (droppableId === '2') {\n        title = 'Done'\n        titleStyle = \"done\"\n    }\n\n    return (\n        <div>\n            <p className={titleStyle}> {title}</p>\n            <Droppable droppableId={droppableId}>\n                {(provided, snapshot) => (\n                    <ul className=\"id\" ref={provided.innerRef} {...provided.droppableProps} style={getColumnStyle(snapshot.isDraggingOver)}>                      \n                    {tasks.map(({id, content, column}, index) => {\n                        return (\n                            <Card index={index} id={id} content={content} key={id} column={column} />\n                        );\n                    })}\n                    {provided.placeholder}\n                    </ul>\n                )}\n            </Droppable>\n        </div>\n        \n    )\n}\n\nexport default Column","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/tasks'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst update = (task) => {\n    const request = axios.put(`${baseUrl}/${task.id}`, task)\n    console.log('request is: ', request);\n    console.log('request URL is: ', `${baseUrl}/${task.id}`);\n    return request.then(response => response.data)\n}\n\nconst taskService = {\n    getAll,\n    create,\n    update\n}\n\n\nexport default taskService ","import React, { useState, useEffect } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\n//components\nimport Column from './Column';\n\n//modules\nimport taskService from '../../Services/tasks';\n\n//styles\nimport './kanban_styles.css'\n\n\n//function to move cards between columns\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    console.log('move function init');\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    let [removed] = sourceClone.splice(droppableSource.index, 1);\n    console.log('removed is: ', removed);\n    removed.column = parseInt(droppableDestination.droppableId) //update card's column field\n\n    console.log('deconstructed removed is: ',{ ...removed});\n    destClone.splice(droppableDestination.index, 0, removed); //move card to new column\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n    \n    console.log('destination is: ', droppableDestination);\n    console.log('edited removed is: ', removed);\n\n    taskService\n        .update(removed)\n        .then(\n            console.log('edit called')\n        )\n\n    return result; \n};\n\n//function to reorder cards moved inside same column\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n\nconst KanbanContext = () => {\n    const [tasks, setTasks] = useState([[], [], []])\n\n    useEffect(() => {\n        taskService\n          .getAll()\n          .then(response => {\n            setTasks(\n                [\n                    response.data.filter(task => task.column === 0),\n                    response.data.filter(task => task.column === 1),\n                    response.data.filter(task => task.column === 2)\n                ]\n            )\n          })\n      }, [])\n\n\n    //function to save list order after movement. Adding movement between lists\n    const handleOnDragEnd = (result) => {\n        const { source, destination } = result;\n\n        if (!destination) return;\n\n        const sInd = +source.droppableId;\n        const dInd = +destination.droppableId;\n\n        if (sInd === dInd) { //card moved inside same column\n            const items = reorder(tasks[sInd], source.index, destination.index);\n            const newTasks = [...tasks];\n            newTasks[sInd] = items;\n            setTasks(newTasks);\n          } else { //card moved to another column\n            console.log('tasks is: ', tasks);\n            console.log('source droppableId is: ', sInd);\n            console.log('tasks + sInd is: ', tasks[sInd]);\n            \n            const result = move(tasks[sInd], tasks[dInd], source, destination);\n            console.log('result is: ', result[dInd][destination.index]);\n            const newTasks = [...tasks];\n            newTasks[sInd] = result[sInd];\n            newTasks[dInd] = result[dInd];\n\n            setTasks(newTasks)\n          }\n    }\n\n    return (\n        <div className=\"container\">\n            <DragDropContext onDragEnd={handleOnDragEnd}>\n                <Column droppableId=\"0\" tasks={tasks[0]} />\n                <Column droppableId=\"1\" tasks={tasks[1]} />\n                <Column droppableId=\"2\" tasks={tasks[2]} />\n            </DragDropContext>\n        </div>\n    )\n}\n\nexport default KanbanContext","import React, { useState, useEffect } from \"react\";\n\n//components\nimport Pomodoro from './Components/Pomodoro_components/Pomodoro'\nimport KanbanContext from './Components/Kanban_components/KanbanContext'\n\n//modules\nimport taskService from \"./Services/tasks\";\n\n//styles\nimport './App.css'\n\nconst App = () => {\n  const [tasks, setTasks] = useState([])\n  const [newTask, setNewTask] = useState(\"\")\n\n  useEffect(() => {\n    taskService\n      .getAll()\n      .then(response => {\n        setTasks(response.data)\n      })\n  }, [])\n\n  const addTask = (event) => { //left only to copy later\n    event.preventDefault()\n    console.log('addTask init');\n    const taskObject = {\n      content: newTask,\n      column: 0,\n      date: new Date(),\n    }\n\n    taskService\n      .create(taskObject)\n      .then(response => {\n        console.log('task saved to local server');\n        setTasks(tasks.concat(response.data))\n        setNewTask('')\n      })\n  }\n\n  return (\n    <div className=\"body\">\n      <div>\n        <Pomodoro />\n      </div>\n      <div>\n        <KanbanContext />\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}